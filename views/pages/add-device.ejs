<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
  </head>
  <body class="container">
    <header><%- include('../partials/header'); %></header>

    <main>
      <div class="container">
        <h2>Add Device</h2>
        <form action="/api/devices" id="addDeviceForm">
          <div class="mb-3">
            <label for="nameInput" class="form-label">Name</label>
            <input
              type="text"
              class="form-control"
              id="nameInput"
              name="nameInput"
            />
          </div>
          <div class="mb-3">
            <label for="label" class="form-label">Label</label>
            <input type="text" class="form-control" id="label" name="label" />
          </div>
          <div class="mb-3">
            <label for="deviceNetworkId" class="form-label"
              >Device Network ID</label
            >
            <input
              type="text"
              class="form-control"
              id="deviceNetworkId"
              name="deviceNetworkId"
            />
          </div>
          <div class="mb-3">
            <label for="deviceType" class="form-label">Type</label>
            <select
              class="form-select"
              aria-label="Default select example"
              id="deviceType"
              name="deviceType"
            >
              <option selected>Select a Type</option>
              <% deviceHandlers.forEach(function(deviceHandler) { %>
              <option value="<%= deviceHandler.id %>">
                <%= deviceHandler.name %> (<%= deviceHandler.namespace %>)
              </option>
              <% }); %>
            </select>
          </div>

          <button type="submit" class="btn btn-primary">Add</button>
        </form>
      </div>
    </main>

    <footer><%- include('../partials/footer'); %></footer>
  </body>
</html>

<script language="javascript">
  /**
   * Helper function for POSTing data as JSON with fetch.
   *
   * @param {Object} options
   * @param {string} options.url - URL to POST data to
   * @param {FormData} options.formData - `FormData` instance
   * @return {Object} - Response body from URL that was POSTed to
   */
  async function postFormDataAsJson({ url, formData }) {
    const plainFormData = Object.fromEntries(formData.entries());
    const formDataJsonString = JSON.stringify(plainFormData);

    const fetchOptions = {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: formDataJsonString,
    };

    const response = await fetch(url, fetchOptions);

    if (!response.ok) {
      const errorMessage = await response.text();
      throw new Error(errorMessage);
    }

    return response.json();
  }

  /**
   * Event handler for a form submit event.
   *
   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event
   *
   * @param {SubmitEvent} event
   */
  async function handleFormSubmit(event) {
    event.preventDefault();

    const form = event.currentTarget;
    const url = form.action;
    console.log("form", JSON.stringify(form));

    try {
      const formData = new FormData(addDeviceForm);
      console.log("formData", JSON.stringify(formData));
      const responseData = await postFormDataAsJson({ url, formData });

      console.log({ responseData });
      window.location.href = "/devices";
    } catch (error) {
      console.error(error);
    }
  }

  const addDeviceFormElm = document.getElementById("addDeviceForm");
  addDeviceFormElm.addEventListener("submit", handleFormSubmit);
</script>
